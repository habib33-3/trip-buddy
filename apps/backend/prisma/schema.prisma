generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TripStatus {
  PLANNED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String?
  password String
  role     UserRole @default(USER)
  image    String?
  initials String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trips Trip[]
}

model Trip {
  id          String     @id @default(uuid())
  title       String
  description String
  status      TripStatus @default(PLANNED)

  startDate DateTime
  endDate   DateTime

  user   User   @relation(fields: [userId], references: [id])
  userId String

  locations   Location[]
  itineraries Itinerary[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Place {
  id String @id @default(uuid())
  address          String
  formattedAddress String?
  latitude         Float
  longitude        Float
  country          String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  locations Location[]

  @@unique([latitude, longitude])
}

model Location {
  id String @id @default(uuid())

  trip   Trip   @relation(fields: [tripId], references: [id])
  tripId String

  place   Place  @relation(fields: [placeId], references: [id])
  placeId String

  notes       String?
  customTitle String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  itineraries Itinerary[]
}

model Itinerary {
  id    String @id @default(uuid())
  title String
  order Int    @default(0)

  trip   Trip   @relation(fields: [tripId], references: [id])
  tripId String

  location   Location @relation(fields: [locationId], references: [id])
  locationId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
