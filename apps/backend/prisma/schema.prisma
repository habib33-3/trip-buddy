generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TripStatus {
  PLANNED
  ACTIVE
  COMPLETED
  CANCELLED
}

enum ItineraryStatus {
  UPCOMING
  COMPLETED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String?
  password String
  role     UserRole @default(USER)
  image    String?
  initials String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trips Trip[]
}

model Trip {
  id          String @id @default(uuid())
  title       String
  description String

  status   TripStatus @default(PLANNED)
  coverImg String?

  startDate DateTime
  endDate   DateTime

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  itineraries Itinerary[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Place {
  id               String @id @default(uuid())
  formattedAddress String
  lat              Float
  lng              Float
  country          String
  city             String

  itineraries Itinerary[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([lat, lng])
}

model Itinerary {
  id    String  @id @default(uuid())
  title String
  notes String?

  status ItineraryStatus @default(UPCOMING)

  trip   Trip   @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId String

  place   Place  @relation(fields: [placeId], references: [id])
  placeId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([tripId], name: "trip_id_idx")
}
